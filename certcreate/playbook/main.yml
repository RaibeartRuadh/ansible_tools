---
- hosts: all
  become: true
  vars:
    - server_hostname: royproject.ru
    - key_size: 4096
    - passphrase: # Set if you want passphrase
    - key_type: RSA # Others include DSA, ECC, Ed25519, Ed448, X25519, X448
    - country_name: RU
    - email_address: robroyway@gmail.com
    - organization_name: royproject
  tasks:

  - name: install EPEL Repo
    yum:
      name: epel-release
      state: present

  - name: Ставим кучу пакетов
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - nano
      - mc
#      - ansible    
      - python-pip
      - python-devel
      - libselinux-python

#  - name: Install python 3.6 and pip3
#    yum:
#      name:
#        - python36
 #       - libselinux-python
#        - ansible
#      state: present

  - name: Install SELinux for Python 3
    pip:
      name: cryptography
      state: present

  - name: PIP install ...
    pip: 
      name: pyOpenSSL
      state: present


  - name: Create Folder
    file: 
      path: /root/certificates
      owner: root 
      group: root 
      mode: 0755 
      state: directory



  - name: Generate an OpenSSL private key
    openssl_privatekey:
      path: "/root/certificates/{{ server_hostname }}_privkey.pem"
      size: "{{ key_size }}"
      type: "{{ key_type }}"
      backup: yes
  - name: Generate an OpenSSL Certificate Signing Request with Subject information
    openssl_csr:
      path: "/root/certificates/{{ server_hostname }}.csr"
      privatekey_path: "/root/certificates/{{ server_hostname }}_privkey.pem"
      country_name: "{{ country_name }}"
      organization_name: "{{ organization_name }}"
      email_address: "{{ email_address }}"
      common_name: "{{ server_hostname }}"
  - name: Generate a Self Signed OpenSSL certificate
    openssl_certificate:
      path: "/root/certificates/{{ server_hostname }}_cert.pem"
      privatekey_path: "/root/certificates/{{ server_hostname }}_privkey.pem"
      csr_path: "/root/certificates/{{ server_hostname }}.csr"
      provider: selfsigned



#  - name: Generate an OpenSSL private key
#    openssl_privatekey:
#      path: "./certificates/{{ server_hostname }}_privkey.pem"
#      size: "{{ key_size }}"
#      type: "{{ key_type }}"
#      backup: yes




